%%%%%%
%%%%%% SpaceDyn講習会第2回　課題④
%%%%%%
%%%%%% 空気浮上テストベッド(3リンクシリアルマニピュレータ)の手先速度制御
%%%%%% 目標手先速度: 0.01 m/s x方向
%%%%%% 初期条件:　[-60 120 -60]
%%%%%% 
%%%%%%
%%%%%% 2017年06月08日
%%%%%%

% 「%」はコメントアウトです．
% 「'」は転置です．
% 「;」は計算の表示非表示や，行列の改行を表します．
%　〇　＝　関数（△）は，△を引数，〇が計算結果です．


clc
clear
% close all

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%% global 変数の定義 %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 全ての関数及び，メインルーチン内で共通で使用される変数
global d_time
global Gravity
global Ez

%%%%%% 関節の単位回転軸ベクトル %%%%%
Ez =[0 0 1]';

d_time =0.01; % シミュレーションの１ステップあたりの時間

Gravity =[0 0 0]'; % 重力（地球重力ならば Gravity = [0 0 -9.8]）


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%% リンクパラメータ定義と変数の初期化 %%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
LP = a4_LP();%LP１とかにしてもよいi.         Sample_LP()を呼び出してLPに格納
SV = a4_SV( LP );%SVも名前は自分で定義できる       Sample_SV(LP)を呼び出してSVに格納   同時にサイズを決めている

%%%%% ベースから num_e で指定された手先までを結ぶ関節(リンク)を求める %%%%%
num_e = 1;%アームの数を入れる？
joints = j_num(LP, num_e);%アームの手先までリンクの数を求める

%%%%% ロボットの初期関節角度を設定 %%%%%
SV.q = [ -pi/3 2*pi/3 -pi/3]';
xhd = zeros(6,1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% 関節制御で使うパラメータの定義 %%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%PD制御をする
des_xhd = [ 0.01 0 0 0 0 0 ]'; % 目標手先速度[m/s]

kp = 0.8; % 比例フィードバックゲインP
kd = 0.4; % 微分フィードバックゲインD


%%%%% シミュレーション結果を書き込むためのファイルの定義 %%%%%
%fopen ファイルを開くまたは開いているファイルに関する情報の取得
fidw = fopen( 'sample_a4.dat','w' );
%w：書き込み用にファイルを開くか新規ファイルを作成
%datファイルを開いてそれに結果を書き込んでいく宣言


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%% ここからシミュレーションループスタート %%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        %%%%%%%%%%%%%%%%%%%% 順動力学の計算 %%%%%%%%%%%%%%%%%%%%%        
        % 運動方程式より次の時間のベースの加速度及び関節角加速度を計算し，
        % それを積分することにより，ベースの位置（6×1），速度(6×1)及び，
        % 関節角，関節角速度を求める．
        SV = f_dyn_rk2( LP, SV );
        
        %%%%%%%%%%%%%%%%%%%%%%% 順運動学 %%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%% 手先位置姿勢の計算 (順運動学) %%%%%% 
        SV =calc_aa( LP, SV );
        % 各リンク重心の位置ベクトル(6×1)を計算
        SV =calc_pos( LP, SV );


for time = 0:d_time:8

        time % 現在どのステップを計算しているかを画面に出力（；ついてないので ）     
     
        %%%%%%%%%%%%%%%% 外力の計算 %%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        SV.Fe(:,3) = [-0.1;0;0];
        %%%%%%%%%%%%%%%% 目標トルク制御の計算 %%%%%%%%%%%%%%%%%%%
        % フリーフライングロボットの運動方程式から
        % 外力(ベースと先端に)は0と仮定して
        % τ=H_ast*φdd + c_ast
        
        % H_ast = Hm - Hbm'inv(Hb)Hbm
        % C_ast = Cm - Hbm'inv(Hb)Cb
        [H_ast,C_ast] = calc_ast(LP,SV);
        
        % xh = Je*φd
        % φdd = (φd-φ)/Δt
        Je = calc_gj(LP, SV, num_e);
        des_qd  = pinv(Je)*des_xhd;
        des_qdd = (des_qd - SV.qd)/d_time;
        
        SV.tau = H_ast*des_qdd + C_ast;% - Je'*[SV.Fe(:,3);SV.Te(:,3)];
        
        %制御トルク
        %関節角度のpd制御　
        %微分ゲイン*(目標関節角速度-現在の関節角速度)+比例ゲイン（目標関節角度-現在の関節角度)
        
        %%%%%%%%%%%%%%%%%%%% 順動力学の計算 %%%%%%%%%%%%%%%%%%%%%
        % 運動方程式より次の時間のベースの加速度及び関節角加速度を計算し，
        % それを積分することにより，ベースの位置（6×1），速度(6×1)及び，
        % 関節角，関節角速度を求める．
        % 運動方程式中の速度非線形項を計算するために，
        % 再帰ニュートンオイラー法による逆動力学も内部で解いている．
        SV = f_dyn_rk2( LP, SV );
           
        
        
        %%%%%%%%%%%%%%%%%%%%%%% 順運動学 %%%%%%%%%%%%%%%%%%%%%%%%%
        
        %%%%% 手先位置姿勢の計算 (順運動学) %%%%%% 
        % 各リンクの座標変換行列(方向余弦行列)の計算
        % （リンクi → 慣性座標系）
        SV =calc_aa( LP, SV );
        
        % 各リンク重心の位置ベクトル(6×1)を計算
        SV =calc_pos( LP, SV );
        
        %%%%% 手先位置姿勢の計算 %%%%%
        [ POS_e, ORI_e ] =f_kin_e(LP, SV, joints);
        %POS_e 手先の位置
        %ORI_e 手先の方向余弦行列（ベースから見た）
        %joints 手先のリンク番号
        
        %%%%% 手先姿勢のオイラー角表現 %%%%%
        Qe_rad =dc2rpy(ORI_e');%ORI_eの転置を忘れない！(SpceDynの特性上そうなっている)
        
        %%%%% ベース姿勢のオイラー角表現 %%%%%%
        SV.Q0 =dc2rpy(SV.A0');  %方向余弦行列からオイラー角に変換
        
        %%%%% 角度をradからdegへ変換 %%%%%
        % 手先の姿勢
        Qe_deg =Qe_rad*180/pi; 
        % ベースの姿勢
        Q0_deg =SV.Q0*180/pi;
        % 関節角度
        q_deg =SV.q*180/pi;
        
        % 手先速度
        xhd = Je*SV.qd;
   
        %%%%%%%%%%%%%%%%%%%%% 結果をファイルに出力 %%%%%%%%%%%%%%%%%%%%%
        %%% 時間，ベースの位置・姿勢，手先の位置・姿勢，関節角度
        %fprintf データのファイルへの書き込み
        fprintf(fidw,'%g %g %g %g %g %g %g %g %g %g %g %g %g %g %g %g %g \n',time,SV.R0,Q0_deg,POS_e,Qe_deg,q_deg,xhd(1));
        %1(time)+3(SV.R0+)+3(Q0_deg)+3(POS_e)+3(Qe_deg)+3(q_deg)+1(xhd(1))=17
        % %gは右の変数と場所を一致させる
end

%%%%%%%%%%%%%%%%%%%%%%%%%%% シミュレーションループここまで %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 結果の表示 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% 結果ファイルを開く %%%%%
%r：読み取り用にファイルを開く
fid = fopen('sample_a4.dat','r');

%%%%% データを行列に格納する %%%%%
%fscanf テキストファイルからのデータの読み取り
%[15 inf]はtmpの次元を指定
%fscanfはデータを列方向に入力
tmp = fscanf(fid,'%g %g %g %g %g %g %g %g %g %g %g %g %g %g %g %g %g',[17 inf]);
%%%%% データ行列を転置する %%%%%
tmp = tmp';

%%%%% ファイルを閉じる %%%%%
fclose(fid);

%%%%% グラフの描画 %%%%%
%%% ベースの位置
figure(11)
plot(tmp(:,1),tmp(:,2:4),'-');
title('SV.R0');
xlabel('Time [s]'); ylabel('position of Base [m]');
grid on;
hold on;

%%% ベースの姿勢
figure(12)
plot(tmp(:,1),tmp(:,5:7),'-');
title('Q0\_deg');
xlabel('Time [s]'); ylabel('Rotation of Base [deg]');
grid on;
hold on;

%%% 手先の位置
figure(13)
plot(tmp(:,1),tmp(:,8:10),'-');
title('POS_e');
xlabel('Time [s]'); ylabel('posiion of Hand [m]');
grid on;
hold on;

%%% 手先の姿勢
figure(14)
plot(tmp(:,1),tmp(:,11:13),'-');
title('Qe\_deg');
xlabel('Time [s]'); ylabel('Rotation of Hand [deg]');
grid on;
hold on;

%%% 関節角度
figure(15)
plot(tmp(:,1),tmp(:,14:16),'-');
title('q\_deg');
xlabel('Time [s]'); ylabel('Joint angle [deg]');
grid on;
hold on;

%%% 手先速度
figure(16)
plot(tmp(:,1),tmp(:,17),'-');
title('x\_hd');
xlabel('Time [s]'); ylabel('Velocity of end-effector [deg]');
grid on;
hold on;

%%% EOF
