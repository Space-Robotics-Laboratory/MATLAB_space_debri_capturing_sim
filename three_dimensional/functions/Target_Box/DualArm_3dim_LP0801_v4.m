function LP = DualArm_3dim_LP0801(te1)  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% 各リンクパラメータの定義 %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% リンクの連結関係を定義する %%%%%
% LPは各リンクの初期条件を記述している  LPをデータで渡すときに様々なデータを渡せるように構造体にしている  BB(i) = 根元側で結合しているリンク番号
LP.BB = [ 0 1 2 3 4 5   0 7 8 9 10 11 ];   % ベース(リンク0)からリンク1が生えている  このときリンク1から見た根本側とはベースへの向きのことであるので0が一番左に代入されている

% リンク数
LP.num_q = length( LP.BB );   % lengthは行数と列数の内の大きい方を与える

%%%%% リンクの連結関係を定義する その２ %%%%%
% 対角成分はすべて-1  各列が左からそれぞれリンク1,2を表している  根元側で結合しているリンク番号に対応する行に1を入れる
LP.SS = [ -1  1  0  0  0  0    0  0  0  0  0  0;
           0 -1  1  0  0  0    0  0  0  0  0  0;
           0  0 -1  1  0  0    0  0  0  0  0  0;
           0  0  0 -1  1  0    0  0  0  0  0  0;
           0  0  0  0 -1  1    0  0  0  0  0  0;
           0  0  0  0  0 -1    0  0  0  0  0  0;
           
           0  0  0  0  0  0   -1  1  0  0  0  0;
           0  0  0  0  0  0    0 -1  1  0  0  0;
           0  0  0  0  0  0    0  0 -1  1  0  0;
           0  0  0  0  0  0    0  0  0 -1  1  0;
           0  0  0  0  0  0    0  0  0  0 -1  1;
           0  0  0  0  0  0    0  0  0  0  0 -1 ];
%%%%% リンクの連結関係を定義する その３ %%%%%
% ベース部(リンク0)に連結しているリンクは1  それ以外は0
LP.S0 = [ 1 0 0 0 0 0   1 0 0 0 0 0  ];

%%%%% 手先 (リンク先端) の定義 %%%%%
% 末端リンクならば1
LP.SE = [ 0 0 0 0 0 1  0 0 0 0 0 1 ];

%%%%% 関節の種類 %%%%%
% 回転関節ならば 'R'  直動関節ならば 'P'
LP.J_type = [ 'R' 'R' 'R' 'R' 'R' 'R'    'R' 'R' 'R' 'R' 'R' 'R' ];

%%%%% ベース重心から関節iへの位置ベクトル %%%%%
% 直接連結していないリンクはすべて0 ベースの座標系からみたもの
LP.c0 = [ -0.25    0 0 0 0 0     0.25    0 0 0 0 0 ;
           0.2 0 0 0 0 0     0.2 0 0 0 0 0 ;
           0       0 0 0 0 0     0       0 0 0 0 0 ];

%%%%% ベース部 (リンク0) の質量 %%%%%
% LP.m0 = 38 *0 + 7;   % = 5.145+2.550;
LP.m0 = 28;
%%%%% ベース部 (リンク0) の慣性モーメント %%%%% 
ine0 = 0.1;
ine1 = 0;

LP.inertia0 = [1e9 ine1   ine1;   % 0の部分がカップリング項(慣性乗積?)
                ine1   1e9 ine1;   % 慣性乗積が0ということは、固定軸の周りを回転するということ
                ine1   ine1   0.478*0 + 0.1];
LP.inertia0 = [ine0 ine1   ine1;   % 0の部分がカップリング項(慣性乗積?)
                ine1   ine0 ine1;   % 慣性乗積が0ということは、固定軸の周りを回転するということ
                ine1   ine1   ine0];
            
% LP.inertia0 = [0.28 ine1   ine1;   % 0の部分がカップリング項(慣性乗積?)
%                 ine1   0.451 ine1;   % 慣性乗積が0ということは、固定軸の周りを回転するということ
%                 ine1   ine1   0.478];
LP.inertia0 = [0.58 ine1   ine1;   % 0の部分がカップリング項(慣性乗積?)
                ine1   0.79 ine1;   % 慣性乗積が0ということは、固定軸の周りを回転するということ
                ine1   ine1   0.96];
            
nm = 3 / 2;
%%%%% 各リンク（ベース以外）の質量 %%%%%
la_m = 0.062; lb_m = 0.038; lc_m = 0.063;  min  = 0.0012;
LPm = [min min la_m lb_m min lc_m]*10;
LP.m = [ LPm LPm];

%%%%% リンク系全体の質量 %%%%%
LP.mass = sum( LP.m ) + LP.m0;

%%%%% 各リンク間の座標系の回転関係 %%%%%
% 根元のリンク座標系を回転させる  列はリンク 行はx,y,z軸を表す  例えば下記の意味はリンク1はベースリンク(リンク0)と同じ
% tipsangle1 =  pi/6; tipsangle2 = -pi/6; tipsangle3 =  pi/6; tipsangle4 = -pi/6;
a=pi/2;
LP.Qi = [ 0 -a 0  0 0  a     0 -a 0  0 0  a ;
          a  a -a 0 0  0     a  a -a 0 0  0 ;
          a  0 0  0 0  0     a  0 0  0 0  0 ];
      
  
%%%%% 各リンクの慣性モーメント %%%%%
laI = [0.00044   0    0;
         0 0.00044    0;
         0   0 7.8e-7];
lbI = [0.00011   0    0;
         0 0.00011    0;
         0   0 4.8e-7];
lcI = [9.7e-5   1.6e-7    0;
         1.6e-7 6.6e-5    0;
         0   0 6.6e-5];
lminI = [1e-8   0    0;
         0 1e-8    0;
         0   0 2e-8]*100;
LPinertia = [lminI lminI laI lbI lminI lcI]*100;
LP.inertia = [LPinertia LPinertia];
%%%%% 各リンク重心から関節への位置ベクトル %%%%%
% 初期化
LP.cc = zeros( 3, LP.num_q, LP.num_q );   % 3×6×6の零テンソル(3×6の零行列を6つ作る)

% 定義
t1 = 0.1; t2 = 0.03; t3 = 0.0; t4 = -0.01; link2 = 0.181;
min = 1e-3;

LP.cc(:,1,1) = [ -min 0 0 ]';   % リンク1の重心から根本側の関節(J1)への位置ベクトル
LP.cc(:,1,2) = [ min 0 0 ]';   % リンク1の重心からリンク2の関節への位置ベクトル
LP.cc(:,2,2) = [ -min 0 0]';   % リンク2の重心からリンク2の関節への位置ベクトル
LP.cc(:,2,3) = [ min 0 0]';   % リンク2の重心からリンク3の関節への位置ベクトル
LP.cc(:,2,2) = [ 0  0 -min]';   % リンク2の重心からリンク2の関節への位置ベクトル
LP.cc(:,2,3) = [ 0  0  min]';   % リンク2の重心からリンク3の関節への位置ベクトル
% LP.cc(:,3,3) = [ -0.14641-t1 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
% LP.cc(:,3,4) = [ 0.00459 0 0 ]';% リンク2の重心からリンク3の関節への位置ベクトル
% LP.cc(:,4,4) = [ -0.14641-t2 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
% LP.cc(:,4,5) = [ 0.00459  0 0 ]';
LP.cc(:,3,3) = [ -0.1462 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,3,4) = [ 0.1462 0 0 ]';% リンク2の重心からリンク3の関節への位置ベクトル
LP.cc(:,4,4) = [ -0.0905 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,4,5) = [ 0.0905  0 0 ]';
LP.cc(:,5,5) = [ -min 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,5,6) = [ min 0 0 ]';
LP.cc(:,6,6) = [ -te1/2 0 0 ]';    


LP.cc(:,7,7) = [ -min 0 0 ]';   % リンク1の重心から根本側の関節(J1)への位置ベクトル
LP.cc(:,7,8) = [ min 0 0 ]';   % リンク1の重心からリンク2の関節への位置ベクトル
LP.cc(:,8,8) = [ -min 0 0]';   % リンク2の重心からリンク2の関節への位置ベクトル
LP.cc(:,8,9) = [ min 0 0]';   % リンク2の重心からリンク3の関節への位置ベクトル
LP.cc(:,8,8) = [ 0 0 -min]';   % リンク2の重心からリンク2の関節への位置ベクトル
LP.cc(:,8,9) = [ 0 0  min]';   % リンク2の重心からリンク3の関節への位置ベクトル
% LP.cc(:,9,9) = [ -0.14641-t1 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
% LP.cc(:,9,10) = [ 0.00459 0 0 ]';% リンク2の重心からリンク3の関節への位置ベクトル
% LP.cc(:,10,10) = [ -0.14641-t2 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
% LP.cc(:,10,11) = [ 0.00459  0 0 ]';
LP.cc(:,9,9) = [ -0.1462 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,9,10) = [ 0.1462 0 0 ]';% リンク2の重心からリンク3の関節への位置ベクトル
LP.cc(:,10,10) = [ -0.0905 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,10,11) = [ 0.0905  0 0 ]';
LP.cc(:,11,11) = [ -min 0 0 ]';      % リンク3の重心からリンク3の関節への位置ベクトル
LP.cc(:,11,12) = [ min 0 0 ]';
LP.cc(:,12,12) = [ -te1/2 0 0 ]'; 
% 末端リンクから端点までの位置ベクトル  末端リンクの重心から手先への位置ベクトル(手先が球の場合は球の中心まで)  末端部を持たないリンクは0を入れる
% L = 0.07;
% theta = pi/6;
% te2 = L*sin(theta); te3 = L*cos(theta) - te1;

LP.ce = [ 0 0 0 0 0 0   0 0 0 0 0 0;
          0 0 0 0 0 0   0 0 0 0 0 0;
          0 0 0 0 0 0   0 0 0 0 0 0];

% 末端リンクと端点の回転関係  末端リンクの根本と先端の座標系が同一であるということ  記述法はQiと同じ  末端部を持たないリンクは0を入れる
LP.Qe = zeros(3,LP.num_q);

% EOF